[project]
name = "krr-mcp-server"
version = "0.1.0"
description = "MCP server for safe Kubernetes resource optimization using krr"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "KRR MCP Server Team" }
]
keywords = ["kubernetes", "optimization", "mcp", "krr", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "fastmcp>=0.1.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "structlog>=23.0.0",
    "typer>=0.9.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
krr-mcp-server = "src.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-config=.coveragerc",
    "--strict-markers",
    "--strict-config",
]

# Test markers for categorizing tests
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for complete workflows", 
    "performance: Performance and load tests",
    "chaos: Chaos engineering and failure scenario tests",
    "coverage: Coverage analysis and reporting tests",
    "safety_critical: Safety-critical functionality tests (require 95%+ coverage)",
    "slow: Tests that take longer than 30 seconds",
    "network: Tests that require network access",
    "external: Tests that depend on external services",
]

# Timeout for tests (in seconds)
timeout = 300

# Minimum coverage thresholds
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning:pkg_resources.*",
    "ignore::PendingDeprecationWarning",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "mypy>=1.17.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-timeout>=2.1.0",
    "psutil>=5.9.0",
]
